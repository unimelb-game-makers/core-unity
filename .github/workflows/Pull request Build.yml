#  GitHub Action Secret:
#  UNITY_LICENSE: Unity license file content
#  UNITY_EMAIL: Unity account email
#  UNITY_PASSWORD: Unity account password
# STEAM_USERNAME: Steam account username
# STEAM_CONFIG_VDF: Steam config file content

#  Github Action Variables:
#  UNITY_VERSION: Unity version (e.g. 2023.2.9f1)
#  STEAM_APP_ID: Steam app ID (e.g. 123456)


# Only runs on pull requests to the main branch
name: Automated Unity Build on Windows
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  # Build windows for Pull Request
  build-Windows:
    name: Build Windows 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - targetPlatform: StandaloneWindows64
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          
      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard


      # Cache
      - name: Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}

      # Build
      - name: Build project 
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ vars.UNITY_VERSION }}
      
      # Output
      - name: Upload the file to Github Action
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
  
 